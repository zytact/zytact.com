import { LinkPreview } from '@/components/ui/link-preview';
import NavBar from '@/components/ui/NavBar';
import { useId } from 'react';
import type { Metadata } from 'next';
import Squares from '@/components/ui/Squares';
import { JSX } from 'react/jsx-dev-runtime';

export const metadata: Metadata = {
    title: 'Skills',
    description: 'watashi wa enjinia desu',
    alternates: {
        canonical: `${process.env.NEXT_PUBLIC_BASE_URL}/skills`,
    },
};

export default function Skills() {
    return (
        <div className="min-h-screen">
            <Squares
                speed={0.2}
                className="fixed inset-0 z-0"
                direction="diagonal"
            />
            <main className="relative z-10 flex h-full w-full flex-col items-center justify-center overflow-hidden rounded-md bg-black/[0.96] bg-white/[0.02] antialiased">
                <NavBar className="mt-4" />
                <div className="px-5 py-20 lg:px-0 lg:py-60">
                    <div className="mx-auto grid max-w-7xl grid-cols-1 gap-10 sm:grid-cols-2 md:grid-cols-3 md:gap-2 lg:grid-cols-4">
                        {grid.map((skill) => (
                            <div
                                key={skill.id}
                                className="relative overflow-hidden rounded-3xl bg-linear-to-b from-neutral-900 to-neutral-950 p-6"
                            >
                                <Grid size={20} />
                                <p className="relative z-20 text-center text-base font-bold text-white">
                                    {skill.svg}
                                    <LinkPreview url={skill.link}>
                                        {skill.title}
                                    </LinkPreview>
                                </p>
                                <p className="relative z-20 mt-4 text-center text-base font-normal text-neutral-400">
                                    {skill.description}
                                </p>
                            </div>
                        ))}
                    </div>
                </div>
            </main>
        </div>
    );
}

const HtmlLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
        width="45px"
        height="45px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>HTML</title>
        <path d="M 45.273438 2.324219 C 45.085938 2.117188 44.816406 2 44.535156 2 L 5.464844 2 C 5.183594 2 4.914063 2.117188 4.726563 2.324219 C 4.535156 2.53125 4.441406 2.808594 4.46875 3.089844 L 7.988281 42.515625 C 8.023438 42.929688 8.3125 43.273438 8.710938 43.390625 L 24.722656 47.960938 C 24.808594 47.988281 24.902344 48 24.996094 48 C 25.089844 48 25.179688 47.988281 25.269531 47.960938 L 41.292969 43.390625 C 41.691406 43.273438 41.976563 42.929688 42.015625 42.515625 L 45.53125 3.089844 C 45.558594 2.808594 45.464844 2.53125 45.273438 2.324219 Z M 36.847656 15.917969 L 18.035156 15.917969 L 18.484375 21.007813 L 36.394531 21.007813 L 35.050781 36.050781 L 24.992188 39.089844 L 24.894531 39.058594 L 14.953125 36.046875 L 14.410156 29.917969 L 19.28125 29.917969 L 19.492188 32.296875 L 25.050781 33.460938 L 30.507813 32.296875 L 31.089844 25.859375 L 14.046875 25.859375 L 12.722656 11.054688 L 37.28125 11.054688 Z" />
    </svg>
);

const CssLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
        width="50px"
        height="50px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>CSS</title>
        <path
            fillRule="evenodd"
            d="M 42 6 L 39 40 L 25 44 L 11 40 L 8 6 Z M 16.800781 28 L 20.800781 28 L 20.898438 30.5 L 25 31.898438 L 29.101563 30.5 L 29.398438 26 L 20.601563 26 L 20.398438 22 L 29.601563 22 L 29.898438 18 L 16.101563 18 L 15.800781 14 L 34.101563 14 L 33.601563 22 L 32.898438 33.5 L 25 36.101563 L 17.101563 33.5 Z"
        />
    </svg>
);

const TailwindLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        width="50"
        height="50px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>Tailwind CSS</title>
        <path d="M23.395 7.081c-.488-.207-1.053-.002-1.29.472-.224.448-.523.723-.914.838-.612.183-1.343-.052-1.685-.253-.451-.265-.974-.667-1.527-1.092C16.214 5.688 14.018 4 11 4 8.586 4 7.346 5.239 5.293 7.293 4.902 7.684 4.899 8.32 5.29 8.71 5.67 9.092 6.28 9.104 6.672 8.74c.01-.009.02-.019.03-.028.552-.426 4.03-.012 5.55 1.196C14.511 11.703 16.142 13 18 13c2.659 0 4.879-1.741 5.94-4.658C24.121 7.844 23.882 7.291 23.395 7.081zM18.395 14.081c-.488-.207-1.053-.002-1.29.472-.224.448-.523.723-.914.838-.612.18-1.343-.052-1.685-.253-.451-.265-.974-.667-1.527-1.092C11.214 12.688 9.018 11 6 11c-2.414 0-3.654 1.239-5.707 3.293-.391.391-.394 1.027-.003 1.417.38.382.991.395 1.383.03.01-.009.02-.019.03-.028.551-.426 4.031-.012 5.55 1.196C9.511 18.703 11.142 20 13 20c2.659 0 4.879-1.741 5.94-4.658C19.121 14.844 18.882 14.291 18.395 14.081z" />
    </svg>
);

const JavascriptLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
        width="50px"
        height="50px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>JavaScript</title>
        <path d="M 43.335938 4 L 6.667969 4 C 5.195313 4 4 5.195313 4 6.667969 L 4 43.332031 C 4 44.804688 5.195313 46 6.667969 46 L 43.332031 46 C 44.804688 46 46 44.804688 46 43.335938 L 46 6.667969 C 46 5.195313 44.804688 4 43.335938 4 Z M 27 36.183594 C 27 40.179688 24.65625 42 21.234375 42 C 18.140625 42 15.910156 39.925781 15 38 L 18.144531 36.097656 C 18.75 37.171875 19.671875 38 21 38 C 22.269531 38 23 37.503906 23 35.574219 L 23 23 L 27 23 Z M 35.675781 42 C 32.132813 42 30.121094 40.214844 29 38 L 32 36 C 32.816406 37.335938 33.707031 38.613281 35.589844 38.613281 C 37.171875 38.613281 38 37.824219 38 36.730469 C 38 35.425781 37.140625 34.960938 35.402344 34.199219 L 34.449219 33.789063 C 31.695313 32.617188 29.863281 31.148438 29.863281 28.039063 C 29.863281 25.179688 32.046875 23 35.453125 23 C 37.878906 23 39.621094 23.84375 40.878906 26.054688 L 37.910156 27.964844 C 37.253906 26.789063 36.550781 26.328125 35.453125 26.328125 C 34.335938 26.328125 33.628906 27.039063 33.628906 27.964844 C 33.628906 29.109375 34.335938 29.570313 35.972656 30.28125 L 36.925781 30.691406 C 40.171875 32.078125 42 33.496094 42 36.683594 C 42 40.117188 39.300781 42 35.675781 42 Z" />
    </svg>
);

const TypescriptLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
        width="50px"
        height="50px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>TypeScript</title>
        <path d="M45,4H5C4.447,4,4,4.448,4,5v40c0,0.552,0.447,1,1,1h40c0.553,0,1-0.448,1-1V5C46,4.448,45.553,4,45,4z M29,26.445h-5V42h-4	V26.445h-5V23h14V26.445z M30.121,41.112v-4.158c0,0,2.271,1.712,4.996,1.712c2.725,0,2.62-1.782,2.62-2.026	c0-2.586-7.721-2.586-7.721-8.315c0-7.791,11.25-4.717,11.25-4.717l-0.14,3.704c0,0-1.887-1.258-4.018-1.258s-2.9,1.013-2.9,2.096	c0,2.795,7.791,2.516,7.791,8.141C42,44.955,30.121,41.112,30.121,41.112z" />
    </svg>
);

const NodejsLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        x="0px"
        y="0px"
        width="50"
        height="50"
        viewBox="0 0 32 32"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>Node.js</title>
        <path d="M 15.994141 3 C 15.629141 3 15.264219 3.0895313 14.949219 3.2695312 L 5.0390625 8.9902344 C 4.3990625 9.3602344 4 10.060781 4 10.800781 L 4 21.179688 C 4 21.929688 4.3990625 22.620234 5.0390625 22.990234 L 7.640625 24.490234 C 8.900625 25.110234 9.3499219 25.109375 9.9199219 25.109375 C 11.789922 25.109375 12.859375 23.979531 12.859375 22.019531 L 12.859375 11.310547 C 12.859375 11.150547 12.730312 11.019531 12.570312 11.019531 L 11.320312 11.019531 C 11.150313 11.019531 11.029297 11.150547 11.029297 11.310547 L 11.029297 22.009766 C 11.029297 22.889766 10.120391 23.749531 8.6503906 23.019531 L 5.9296875 21.449219 C 5.8296875 21.399219 5.7695313 21.289687 5.7695312 21.179688 L 5.7695312 10.810547 C 5.7695312 10.690547 5.8296875 10.589297 5.9296875 10.529297 L 15.839844 4.8105469 C 15.929844 4.7505469 16.050391 4.7505469 16.150391 4.8105469 L 26.060547 10.529297 C 26.160547 10.589297 26.220703 10.690781 26.220703 10.800781 L 26.220703 21.179688 C 26.220703 21.289687 26.160313 21.399219 26.070312 21.449219 L 16.150391 27.179688 C 16.060391 27.229688 15.929844 27.229688 15.839844 27.179688 L 13.289062 25.669922 C 13.219062 25.619922 13.120781 25.610391 13.050781 25.650391 C 12.340781 26.050391 12.210781 26.100078 11.550781 26.330078 C 11.390781 26.380078 11.140625 26.479766 11.640625 26.759766 L 14.949219 28.720703 C 15.269219 28.900703 15.630234 29 15.990234 29 C 16.360234 29 16.719062 28.900703 17.039062 28.720703 L 26.960938 22.990234 C 27.600938 22.620234 28 21.929688 28 21.179688 L 28 10.810547 C 28 10.060547 27.600938 9.37 26.960938 9 L 17.039062 3.2695312 C 16.724063 3.0895313 16.359141 3 15.994141 3 z M 18.660156 11.005859 C 15.830156 11.005859 14.140625 12.205078 14.140625 14.205078 C 14.140625 16.375078 15.819062 16.974141 18.539062 17.244141 C 21.789062 17.564141 22.039062 18.045547 22.039062 18.685547 C 22.039062 19.785547 21.150547 20.255859 19.060547 20.255859 C 16.430547 20.255859 15.850156 19.594922 15.660156 18.294922 C 15.640156 18.154922 15.520859 18.054688 15.380859 18.054688 L 14.089844 18.054688 C 13.929844 18.054688 13.810547 18.185938 13.810547 18.335938 C 13.810547 20.005937 14.720547 21.994141 19.060547 21.994141 C 22.200547 21.994141 24 20.755703 24 18.595703 C 24 16.455703 22.549766 15.884609 19.509766 15.474609 C 16.419766 15.074609 16.109375 14.864531 16.109375 14.144531 C 16.109375 13.544531 16.380156 12.755859 18.660156 12.755859 C 20.690156 12.755859 21.449766 13.194453 21.759766 14.564453 C 21.789766 14.694453 21.899062 14.794922 22.039062 14.794922 L 23.330078 14.794922 C 23.410078 14.794922 23.479063 14.755313 23.539062 14.695312 C 23.589062 14.645313 23.619375 14.564609 23.609375 14.474609 C 23.409375 12.114609 21.840156 11.005859 18.660156 11.005859 z"></path>
    </svg>
);

const ExpressjsLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        x="0px"
        y="0px"
        width="50"
        height="50"
        viewBox="0 0 50 50"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <path d="M49.729 11h-.85c-1.051 0-2.041.49-2.68 1.324l-8.7 11.377-8.7-11.377C28.162 11.49 27.171 11 26.121 11h-.85l10.971 14.346L25.036 40h.85c1.051 0 2.041-.49 2.679-1.324L37.5 26.992l8.935 11.684C47.073 39.51 48.063 40 49.114 40h.85L38.758 25.346 49.729 11zM21.289 34.242c-2.554 3.881-7.582 5.87-12.389 4.116C4.671 36.815 2 32.611 2 28.109L2 27h12v0h11l0-4.134c0-6.505-4.818-12.2-11.295-12.809C6.273 9.358 0 15.21 0 22.5l0 5.573c0 5.371 3.215 10.364 8.269 12.183 6.603 2.376 13.548-1.17 15.896-7.256 0 0 0 0 0 0h-.638C22.616 33 21.789 33.481 21.289 34.242zM2 22.5C2 16.71 6.71 12 12.5 12S23 16.71 23 22.5V25H2V22.5z"></path>
    </svg>
);

const ReactLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
        width="50px"
        height="50px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>React.js</title>
        <path d="M 34.554688 3.984375 C 33.775003 3.9581582 32.958884 4.0940926 32.140625 4.359375 C 30.504109 4.889941 28.789203 5.9238848 27.029297 7.3554688 C 26.339589 7.9165071 25.643623 8.5578288 24.945312 9.2382812 C 24.262398 8.5751039 23.580733 7.9490442 22.90625 7.4003906 C 21.147758 5.9699557 19.4375 4.9375672 17.804688 4.4082031 C 16.171878 3.8788386 14.547223 3.8624356 13.212891 4.6328125 C 11.878558 5.4031893 11.080619 6.8173558 10.722656 8.4960938 C 10.364693 10.174832 10.402173 12.173992 10.761719 14.412109 C 10.886606 15.189511 11.066671 16.005078 11.269531 16.835938 C 10.507095 17.067004 9.7666767 17.309955 9.0800781 17.578125 C 7.0079817 18.387438 5.2934468 19.355663 4.0449219 20.507812 C 2.7963969 21.659962 1.9902344 23.058304 1.9902344 24.59375 C 1.9902344 26.129196 2.7963969 27.525585 4.0449219 28.677734 C 5.2934468 29.829884 7.0079817 30.800062 9.0800781 31.609375 C 9.8142516 31.896126 10.609118 32.154326 11.429688 32.398438 C 11.134531 33.501278 10.895394 34.571467 10.732422 35.585938 C 10.372587 37.825853 10.334588 39.825265 10.693359 41.507812 C 11.052134 43.19036 11.850478 44.612534 13.191406 45.386719 C 14.532336 46.160905 16.164264 46.141894 17.800781 45.611328 C 19.437297 45.080762 21.15025 44.048772 22.910156 42.617188 C 23.593512 42.061316 24.284757 41.427206 24.976562 40.753906 C 25.671663 41.430886 26.366333 42.068604 27.052734 42.626953 C 28.811227 44.057387 30.523438 45.089776 32.15625 45.619141 C 33.789061 46.148505 35.411762 46.164908 36.746094 45.394531 C 38.080426 44.624154 38.878366 43.209988 39.236328 41.53125 C 39.59429 39.852512 39.554857 37.85335 39.195312 35.615234 C 39.031899 34.598012 38.792614 33.526227 38.496094 32.419922 C 39.343769 32.169866 40.163744 31.904721 40.919922 31.609375 C 42.992018 30.800062 44.706553 29.829884 45.955078 28.677734 C 47.203603 27.525585 48.009766 26.129196 48.009766 24.59375 C 48.009766 23.058304 47.203603 21.659963 45.955078 20.507812 C 44.706553 19.355663 42.992018 18.387438 40.919922 17.578125 C 40.22347 17.306107 39.471688 17.059992 38.697266 16.826172 C 38.901775 15.990221 39.083345 15.168805 39.208984 14.386719 C 39.568819 12.146804 39.606825 10.145439 39.248047 8.4628906 C 38.889279 6.7803434 38.088976 5.3601244 36.748047 4.5859375 C 36.077582 4.1988452 35.334372 4.0105918 34.554688 3.984375 z M 34.462891 6.0195312 C 34.952154 6.03291 35.369535 6.1493386 35.726562 6.3554688 C 36.440618 6.7677287 36.968419 7.5700924 37.25 8.890625 C 37.531581 10.211156 37.521848 11.99533 37.189453 14.064453 C 37.075647 14.772878 36.910402 15.52369 36.722656 16.292969 C 34.677708 15.800829 32.436969 15.435424 30.048828 15.220703 C 28.849094 13.558465 27.615953 12.046374 26.373047 10.703125 C 27.030182 10.061662 27.683063 9.4617259 28.320312 8.9433594 C 29.946026 7.6209332 31.485126 6.7210962 32.769531 6.3046875 C 33.411734 6.0964824 33.973627 6.0061525 34.462891 6.0195312 z M 15.486328 6.0253906 C 15.978419 6.0116533 16.541491 6.1017415 17.185547 6.3105469 C 18.473657 6.7281576 20.015451 7.6275969 21.642578 8.9511719 C 22.266889 9.4590141 22.905452 10.045872 23.548828 10.671875 C 22.296955 12.025781 21.055175 13.553705 19.847656 15.230469 C 17.468002 15.449155 15.235261 15.818024 13.199219 16.3125 C 13.012686 15.546898 12.84964 14.799095 12.736328 14.09375 C 12.403642 12.02283 12.39534 10.236451 12.677734 8.9121094 C 12.960128 7.5877677 13.492238 6.7813032 14.212891 6.3652344 C 14.573216 6.1572002 14.994237 6.0391279 15.486328 6.0253906 z M 24.976562 12.142578 C 25.791064 13.028975 26.606064 13.9993 27.414062 15.042969 C 26.620033 15.009861 25.816288 14.990234 25 14.990234 C 24.167457 14.990234 23.34841 15.010498 22.539062 15.044922 C 23.347352 14.000306 24.16175 13.029737 24.976562 12.142578 z M 25 17.009766 C 26.359894 17.009766 27.685348 17.065647 28.974609 17.160156 C 29.86173 18.434311 30.728648 19.786055 31.554688 21.216797 C 32.280504 22.473948 32.937328 23.729163 33.535156 24.96875 C 32.931017 26.224782 32.263184 27.496972 31.527344 28.771484 C 30.879609 29.893393 30.20319 30.958949 29.515625 31.986328 C 28.059313 32.10805 26.550303 32.175781 25 32.175781 C 23.412375 32.175781 21.869462 32.104031 20.380859 31.976562 C 19.704742 30.963955 19.039735 29.912587 18.402344 28.808594 C 17.668186 27.536996 17.003577 26.269079 16.400391 25.015625 C 17.006106 23.755092 17.673701 22.47818 18.412109 21.199219 C 19.233818 19.775977 20.098207 18.432055 20.980469 17.164062 C 22.283609 17.067424 23.62445 17.009766 25 17.009766 z M 31.550781 17.410156 C 33.198531 17.615819 34.745652 17.90154 36.185547 18.244141 C 35.758129 19.645287 35.231654 21.108808 34.59375 22.619141 C 34.179567 21.820719 33.750599 21.019585 33.287109 20.216797 C 32.725727 19.244455 32.142026 18.315962 31.550781 17.410156 z M 18.34375 17.425781 C 17.764654 18.315097 17.194836 19.224578 16.644531 20.177734 C 16.175094 20.990823 15.737221 21.802736 15.318359 22.611328 C 14.68596 21.110075 14.162654 19.654877 13.738281 18.261719 C 15.168002 17.918363 16.706766 17.633813 18.34375 17.425781 z M 38.164062 18.775391 C 38.872944 18.989877 39.557566 19.21371 40.185547 19.458984 C 42.0957 20.205046 43.60665 21.088493 44.585938 21.992188 C 45.565224 22.895882 45.990234 23.757696 45.990234 24.59375 C 45.990234 25.429804 45.565225 26.291619 44.585938 27.195312 C 43.60665 28.099007 42.0957 28.982454 40.185547 29.728516 C 39.487698 30.001079 38.72096 30.248243 37.923828 30.482422 C 37.355199 28.723643 36.629408 26.888772 35.765625 25.015625 C 36.758785 22.865083 37.561088 20.768289 38.164062 18.775391 z M 11.802734 18.785156 C 12.398795 20.758095 13.190852 22.834207 14.169922 24.962891 C 13.30047 26.846955 12.571087 28.692254 12 30.460938 C 11.23096 30.232919 10.490212 29.992451 9.8144531 29.728516 C 7.9042995 28.982454 6.39335 28.099007 5.4140625 27.195312 C 4.434775 26.291618 4.0097656 25.429804 4.0097656 24.59375 C 4.0097656 23.757696 4.434775 22.895882 5.4140625 21.992188 C 6.39335 21.088493 7.9042995 20.205046 9.8144531 19.458984 C 10.432774 19.217483 11.105915 18.996837 11.802734 18.785156 z M 25 20 C 22.250421 20 20 22.250421 20 25 C 20 27.749579 22.250421 30 25 30 C 27.749579 30 30 27.749579 30 25 C 30 22.250421 27.749579 20 25 20 z M 25 22 C 26.668699 22 28 23.331301 28 25 C 28 26.668699 26.668699 28 25 28 C 23.331301 28 22 26.668699 22 25 C 22 23.331301 23.331301 22 25 22 z M 34.619141 27.363281 C 35.143596 28.604493 35.599462 29.819048 35.982422 30.990234 C 34.779808 31.269089 33.499292 31.504052 32.152344 31.689453 C 32.540071 31.070779 32.922982 30.44057 33.296875 29.792969 C 33.765554 28.981192 34.200846 28.17048 34.619141 27.363281 z M 15.341797 27.365234 C 15.762305 28.177437 16.200272 28.991753 16.671875 29.808594 C 17.041066 30.448052 17.418053 31.072363 17.800781 31.683594 C 16.457817 31.497372 15.181231 31.261605 13.982422 30.982422 C 14.363652 29.81481 14.819744 28.602796 15.341797 27.365234 z M 13.40625 32.923828 C 15.216074 33.352568 17.177716 33.681912 19.257812 33.896484 C 20.646655 35.905245 22.092677 37.70929 23.548828 39.287109 C 22.897813 39.921859 22.252566 40.517583 21.621094 41.03125 C 19.99538 42.353677 18.454326 43.251559 17.169922 43.667969 C 15.885516 44.084378 14.926946 44.029446 14.212891 43.617188 C 13.498835 43.204927 12.972987 42.402563 12.691406 41.082031 C 12.409825 39.761499 12.417606 37.979279 12.75 35.910156 C 12.900793 34.971492 13.12615 33.966374 13.40625 32.923828 z M 36.560547 32.931641 C 36.842786 33.979991 37.069087 34.989811 37.220703 35.933594 C 37.553389 38.004513 37.56169 39.788939 37.279297 41.113281 C 36.996903 42.437623 36.466746 43.24604 35.746094 43.662109 C 35.025442 44.078178 34.059594 44.13441 32.771484 43.716797 C 31.483374 43.299186 29.941578 42.397794 28.314453 41.074219 C 27.678439 40.556858 27.028726 39.958258 26.373047 39.318359 C 27.838664 37.73459 29.295467 35.920758 30.693359 33.900391 C 32.778701 33.687251 34.745791 33.359875 36.560547 32.931641 z M 21.867188 34.101562 C 22.893951 34.157518 23.934244 34.195312 25 34.195312 C 26.030504 34.195312 27.037063 34.159787 28.03125 34.107422 C 27.014961 35.478593 25.979034 36.725149 24.947266 37.847656 C 23.916125 36.722751 22.882145 35.473968 21.867188 34.101562 z" />
    </svg>
);

const PythonLogo = (
    <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 50 50"
        width="50px"
        height="50px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <title>Python</title>
        <path d="M 24.5 2 C 15.800781 2 14 6.492188 14 9.09375 L 14 14 L 24 14 L 24 15 L 9.09375 15 C 5.792969 15 2 17.601563 2 25 C 2 32.398438 5.792969 35 9.09375 35 L 15 35 L 15 29 C 15 26.800781 16.800781 25 19 25 L 31 25 C 32.699219 25 34 23.699219 34 22 L 34 9.09375 C 34 5.59375 30.699219 2 24.5 2 Z M 20 7 C 21.101563 7 22 7.898438 22 9 C 22 10.101563 21.101563 11 20 11 C 18.898438 11 18 10.101563 18 9 C 18 7.898438 18.898438 7 20 7 Z M 35 15 L 35 22 C 35 24.199219 33.199219 26 31 26 L 19 26 C 17.300781 26 16 27.300781 16 29 L 16 40.90625 C 16 44.40625 19.300781 48 25.5 48 C 34.199219 48 36 43.507813 36 40.90625 L 36 36 L 26 36 L 26 35 L 40.90625 35 C 44.207031 35 48 32.398438 48 25 C 48 17.601563 44.207031 15 40.90625 15 Z M 30 39 C 31.101563 39 32 39.898438 32 41 C 32 42.101563 31.101563 43 30 43 C 28.898438 43 28 42.101563 28 41 C 28 39.898438 28.898438 39 30 39 Z" />
    </svg>
);

const NextJsLogo = (
    <svg
        width="50px"
        height="50px"
        viewBox="0 0 256 256"
        version="1.1"
        xmlns="http://www.w3.org/2000/svg"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <g>
            <path d="M119.616813,0.0688905149 C119.066276,0.118932037 117.314565,0.294077364 115.738025,0.419181169 C79.3775171,3.69690087 45.3192571,23.3131775 23.7481916,53.4631946 C11.7364614,70.2271045 4.05395894,89.2428829 1.15112414,109.384595 C0.12512219,116.415429 0,118.492153 0,128.025062 C0,137.557972 0.12512219,139.634696 1.15112414,146.665529 C8.10791789,194.730411 42.3163245,235.11392 88.7116325,250.076335 C97.0197458,252.753556 105.778299,254.580072 115.738025,255.680985 C119.616813,256.106338 136.383187,256.106338 140.261975,255.680985 C157.453763,253.779407 172.017986,249.525878 186.382014,242.194795 C188.584164,241.068861 189.00958,240.768612 188.709286,240.518404 C188.509091,240.36828 179.124927,227.782837 167.86393,212.570214 L147.393939,184.922273 L121.743891,146.965779 C107.630108,126.098464 96.0187683,109.034305 95.9186706,109.034305 C95.8185728,109.009284 95.7184751,125.873277 95.6684262,146.465363 C95.5933529,182.52028 95.5683284,183.971484 95.1178886,184.82219 C94.4672532,186.048207 93.9667644,186.548623 92.915738,187.099079 C92.114956,187.499411 91.4142717,187.574474 87.6355816,187.574474 L83.3063539,187.574474 L82.1552297,186.848872 C81.4044966,186.373477 80.8539589,185.747958 80.4785924,185.022356 L79.9530792,183.896422 L80.0031281,133.729796 L80.0782014,83.5381493 L80.8539589,82.5623397 C81.25435,82.0369037 82.1051808,81.3613431 82.7057674,81.0360732 C83.7317693,80.535658 84.1321603,80.4856165 88.4613881,80.4856165 C93.5663734,80.4856165 94.4172043,80.6857826 95.7434995,82.1369867 C96.1188661,82.5373189 110.007429,103.454675 126.623656,128.650581 C143.239883,153.846488 165.962072,188.250034 177.122972,205.139048 L197.392766,235.839522 L198.418768,235.163961 C207.502639,229.259062 217.112023,220.852086 224.719453,212.09482 C240.910264,193.504394 251.345455,170.835585 254.848876,146.665529 C255.874878,139.634696 256,137.557972 256,128.025062 C256,118.492153 255.874878,116.415429 254.848876,109.384595 C247.892082,61.3197135 213.683675,20.9362052 167.288368,5.97379012 C159.105376,3.32158945 150.396872,1.49507389 140.637341,0.394160408 C138.234995,0.143952798 121.693842,-0.131275573 119.616813,0.0688905149 L119.616813,0.0688905149 Z M172.017986,77.4831252 C173.219159,78.0836234 174.195112,79.2345784 174.545455,80.435575 C174.74565,81.0861148 174.795699,94.9976579 174.74565,126.348671 L174.670577,171.336 L166.73783,159.17591 L158.780059,147.01582 L158.780059,114.313685 C158.780059,93.1711423 158.880156,81.2862808 159.030303,80.7108033 C159.430694,79.3096407 160.306549,78.2087272 161.507722,77.5581875 C162.533724,77.0327515 162.909091,76.98271 166.837928,76.98271 C170.541544,76.98271 171.19218,77.0327515 172.017986,77.4831252 Z"></path>
        </g>
    </svg>
);

const VitestLogo = (
    <svg
        role="img"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
        id="Vitest--Streamline-Simple-Icons"
        height="50px"
        width="50px"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <path d="M13.74024 1.05293a0.49504 0.49504 0 0 0 -0.1569 0.02512 0.49338 0.49338 0 0 0 -0.25056 0.1876L7.59513 9.56159a0.4895 0.4895 0 0 0 -0.08373 0.22327 0.48846 0.48846 0 0 0 0.03163 0.23629 0.4893 0.4893 0 0 0 0.13985 0.19319 0.4927 0.4927 0 0 0 0.2149 0.10481l3.70685 0.78609 -0.22947 4.58007a0.48834 0.48834 0 0 0 0.08466 0.30017 0.49205 0.49205 0 0 0 0.24931 0.18854c0.10157 0.03398 0.21174 0.03444 0.3135 0.00064a0.49387 0.49387 0 0 0 0.25056 -0.18761l5.73735 -8.29594a0.4884 0.4884 0 0 0 0.08404 -0.22327c0.009 -0.08015 -0.0016 -0.16137 -0.03163 -0.23629a0.48835 0.48835 0 0 0 -0.13985 -0.19319 0.49318 0.49318 0 0 0 -0.2149 -0.1048l-3.70686 -0.7861 0.22947 -4.58008a0.48802 0.48802 0 0 0 -0.08466 -0.30017 0.4913 0.4913 0 0 0 -0.24931 -0.18853 0.49439 0.49439 0 0 0 -0.1566 -0.02574zM1.15697 9.78795c-0.30647 0.0012 -0.60009 0.12378 -0.81679 0.34048a1.16107 1.16107 0 0 0 -0.34017 0.81648 1.162 1.162 0 0 0 0.33366 0.81957l10.84241 10.8421a1.15762 1.15762 0 0 0 0.37677 0.25211 1.1583 1.1583 0 0 0 0.44467 0.08838c0.00084 0 0.0016 -0.00031 0.0025 -0.00031 0.00073 0 0.0014 0.00031 0.0022 0.00031a1.15827 1.15827 0 0 0 0.44467 -0.08838 1.15731 1.15731 0 0 0 0.37677 -0.2521l10.84236 -10.8421a1.16272 1.16272 0 0 0 0.33397 -0.81958c-0.0013 -0.30647 -0.12376 -0.59976 -0.34048 -0.81648a1.1616 1.1616 0 0 0 -0.81679 -0.34048 1.16114 1.16114 0 0 0 -0.81926 0.33366l-5.4012 5.4009c-0.0078 0.0074 -0.01718 0.01255 -0.02482 0.02015L12 20.14011l-4.59776 -4.59745c-0.0074 -0.0074 -0.01659 -0.01238 -0.02419 -0.01954l-5.4015 -5.40151a1.162 1.162 0 0 0 -0.81958 -0.33366Z"></path>
    </svg>
);

const JestLogo = (
    <svg
        width="50px"
        height="50px"
        viewBox="0 0 32 32"
        xmlns="http://www.w3.org/2000/svg"
        className="fill-current text-neutral-400 hover:scale-75"
    >
        <path d="M29.667 15.76c0-1.885-1.276-3.536-3.104-4.015l3.984-11.745h-19.74l3.996 11.787c-1.772 0.516-2.991 2.135-2.996 3.979 0 1.391 0.693 2.625 1.751 3.385-0.421 0.599-0.907 1.152-1.443 1.656-0.984 0.939-2.141 1.683-3.401 2.199-1.115-0.751-1.593-2.079-1.161-3.26 4.531-1.412 3.531-8.089-1.208-8.109-2.292 0.004-4.151 1.859-4.151 4.151 0 1.131 0.457 2.167 1.203 2.911-0.068 0.125-0.131 0.261-0.199 0.396-0.619 1.281-1.323 2.724-1.593 4.344-0.536 3.245 0.344 5.849 2.469 7.323 1.145 0.808 2.52 1.245 3.927 1.24 2.432 0 4.907-1.224 7.297-2.412 1.708-0.839 3.468-1.719 5.197-2.145 0.641-0.156 1.308-0.249 2.011-0.355 1.427-0.203 2.901-0.416 4.224-1.187 1.531-0.875 2.599-2.385 2.911-4.12 0.229-1.323 0-2.656-0.593-3.828 0.401-0.641 0.62-1.385 0.62-2.193zM27.86 15.76c0 1.287-1.048 2.333-2.333 2.333-2.209-0.005-3.177-2.791-1.444-4.167l0.005-0.009c0.079-0.057 0.163-0.115 0.24-0.168 0 0 0.016 0 0.016-0.009 0.036-0.021 0.072-0.047 0.109-0.068 0.011 0 0.016-0.005 0.025-0.005 0.037-0.021 0.084-0.036 0.131-0.057s0.093-0.036 0.131-0.057c0.009 0 0.015-0.005 0.025-0.005 0.037-0.011 0.079-0.031 0.115-0.036 0.005 0 0.027-0.011 0.037-0.011 0.047-0.011 0.083-0.021 0.129-0.027h0.005l0.141-0.031c0.009 0 0.025 0 0.036-0.011 0.036 0 0.073-0.011 0.115-0.011h0.041c0.047 0 0.093-0.005 0.151-0.005h0.12c0.037 0 0.068 0 0.104 0.005h0.016c0.073 0.011 0.151 0.021 0.224 0.043 1.083 0.229 1.86 1.187 1.86 2.296zM13.391 1.855h14.573l-3.344 9.864c-0.141 0.027-0.276 0.073-0.417 0.12l-3.52-7.177-3.532 7.131c-0.135-0.043-0.287-0.073-0.437-0.099zM20.016 14.953c-0.172-0.855-0.609-1.636-1.251-2.224l1.917-3.869 1.937 3.952c-0.579 0.573-0.995 1.308-1.161 2.141zM15.375 13.489c0.041-0.011 0.084-0.020 0.131-0.025h0.025c0.037-0.011 0.073-0.011 0.109-0.021h0.037c0.036 0 0.068-0.011 0.104-0.011h0.359c0.037 0 0.068 0.011 0.095 0.011 0.020 0 0.025 0 0.047 0.011 0.036 0.011 0.063 0.011 0.099 0.016 0.011 0 0.021 0 0.041 0.009l0.125 0.027h0.011c0.036 0.011 0.079 0.021 0.115 0.041 0.005 0 0.016 0.005 0.036 0.005 0.027 0.011 0.063 0.021 0.095 0.036 0.004 0 0.015 0.011 0.025 0.011 0.036 0.021 0.073 0.032 0.109 0.047h0.011c0.041 0.016 0.083 0.037 0.12 0.068h0.011c0.036 0.016 0.072 0.041 0.109 0.063 0.009 0 0.009 0.011 0.020 0.011 0.037 0.016 0.063 0.047 0.099 0.063l0.011 0.011c0.109 0.083 0.213 0.176 0.319 0.271l0.004 0.005c0.417 0.437 0.647 1.015 0.641 1.613-0.099 3.011-4.568 3.011-4.667 0-0.005-1.067 0.724-2 1.76-2.26zM6.255 13.421c1.287 0 2.333 1.052 2.333 2.339s-1.047 2.333-2.333 2.333c-1.285 0-2.333-1.047-2.333-2.333s1.048-2.339 2.333-2.339zM27.807 21.459c-0.213 1.197-0.952 2.239-2.009 2.844-1.011 0.583-2.256 0.771-3.557 0.952-0.735 0.095-1.469 0.224-2.188 0.391-1.927 0.475-3.781 1.396-5.579 2.287-2.296 1.141-4.463 2.213-6.473 2.213-1.031 0.005-2.036-0.312-2.875-0.916-2.037-1.407-1.937-4.047-1.693-5.495 0.219-1.355 0.839-2.62 1.432-3.833 0.043-0.073 0.068-0.141 0.105-0.213 0.203 0.072 0.416 0.129 0.64 0.167-0.355 1.963 0.645 3.995 2.593 4.995l0.349 0.181 0.38-0.135c1.62-0.579 3.125-1.511 4.448-2.76 0.735-0.683 1.38-1.453 1.927-2.292 0.215 0.036 0.428 0.047 0.641 0.047 1.885-0.005 3.531-1.276 4.011-3.104h1.557c0.473 1.828 2.124 3.104 4.011 3.104 0.771 0 1.484-0.213 2.093-0.573 0.24 0.693 0.317 1.417 0.187 2.141z" />
    </svg>
);

interface Skill {
    id: number;
    title: string;
    description: string;
    link: string;
    svg: JSX.Element;
}

const grid: Skill[] = [
    {
        id: 1,
        title: 'HTML',
        description:
            'Hypertext Markup Language is the standard markup language for documents designed to be displayed in a web browser. It defines the content and structure of web content.',
        link: 'https://developer.mozilla.org/en-US/docs/Web/HTML',
        svg: HtmlLogo,
    },
    {
        id: 2,
        title: 'CSS',
        description:
            'Cascading Style Sheets is a style sheet language used for specifying the presentation and styling of a document written in a markup language such as HTML or XML. ',
        link: 'https://developer.mozilla.org/en-US/docs/Web/CSS',
        svg: CssLogo,
    },
    {
        id: 3,
        title: 'Tailwind CSS',
        description:
            'Tailwind CSS is an open-source CSS framework. The main feature of this library is that, unlike other CSS frameworks like Bootstrap, it does not provide a series of predefined classes for elements such as buttons or tables.',
        link: 'https://tailwindcss.com/',
        svg: TailwindLogo,
    },
    {
        id: 4,
        title: 'JavaScript',
        description:
            'JavaScript, often abbreviated as JS, is a programming language and core technology of the Web, alongside HTML and CSS. 99% of websites use JavaScript on the client side for webpage behavior. ',
        link: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript',
        svg: JavascriptLogo,
    },
    {
        id: 5,
        title: 'TypeScript',
        description:
            'TypeScript is a free and open-source high-level programming language developed by Microsoft that adds static typing with optional type annotations to JavaScript. ',
        link: 'https://www.typescriptlang.org/',
        svg: TypescriptLogo,
    },
    {
        id: 6,
        title: 'Node.js',
        description:
            'Node.js is a JavaScript runtime built on Chrome’s V8 JavaScript engine. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient. Node.js is used for server-side scripting.',
        link: 'https://nodejs.org/en/',
        svg: NodejsLogo,
    },
    {
        id: 7,
        title: 'Express',
        description:
            'Express.js is a web application framework for Node.js, released as free and open-source software under the MIT License. It is designed for building web applications and APIs.',
        link: 'https://expressjs.com/',
        svg: ExpressjsLogo,
    },
    {
        id: 8,
        title: 'React.js',
        description:
            'React is a free and open-source front-end JavaScript library for building user interfaces. It is maintained by Facebook and a community of individual developers and companies. ',
        link: 'https://reactjs.org/',
        svg: ReactLogo,
    },
    {
        id: 9,
        title: 'Next.js',
        description:
            'Next.js is a React framework that enables several extra features, including server-side rendering and generating static websites. It is an open-source JavaScript framework created by Vercel.',
        link: 'https://nextjs.org/',
        svg: NextJsLogo,
    },
    {
        id: 10,
        title: 'Python',
        description:
            'Python is a high-level, interpreted, general-purpose programming language. Its design philosophy emphasizes code readability, and its syntax allows programmers to express concepts in fewer lines of code than would be possible in languages such as C++ or Java.',
        link: 'https://www.python.org/',
        svg: PythonLogo,
    },
    {
        id: 11,
        title: 'Vitest',
        description:
            'Vitest is a Vite-native unit test framework. It is fast, lightweight, compatible with Jest and has a great developer experience.',
        link: 'https://vitest.dev/',
        svg: VitestLogo,
    },
    {
        id: 12,
        title: 'Jest',
        description:
            'Jest is a JavaScript testing framework designed to ensure correctness of any JavaScript codebase. It is used by Facebook, Instagram, Airbnb, Uber, and many others.',
        link: 'https://jestjs.io/',
        svg: JestLogo,
    },
];

const Grid = ({ pattern, size }: { pattern?: number[][]; size?: number }) => {
    const p = pattern ?? [
        [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
        [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
        [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
        [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
        [Math.floor(Math.random() * 4) + 7, Math.floor(Math.random() * 6) + 1],
    ];
    return (
        <div className="pointer-events-none absolute top-0 left-1/2 -mt-2 -ml-20 h-full w-full [mask-image:linear-gradient(white,transparent)]">
            <div className="absolute inset-0 bg-linear-to-r from-zinc-100/30 from-zinc-900/30 to-zinc-300/30 to-zinc-900/30 opacity-100 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)]">
                <GridPattern
                    width={size ?? 20}
                    height={size ?? 20}
                    x="-12"
                    y="4"
                    squares={p}
                    className="absolute inset-0 h-full w-full fill-black/10 fill-white/10 stroke-black/10 stroke-white/10 mix-blend-overlay"
                />
            </div>
        </div>
    );
};

function GridPattern({
    width,
    height,
    x,
    y,
    squares,
    ...props
}: {
    width: number;
    height: number;
    x: string;
    y: string;
    squares: number[][];
    className: string;
}) {
    const patternId = useId();

    return (
        <svg aria-hidden="true" {...props}>
            <defs>
                <pattern
                    id={patternId}
                    width={width}
                    height={height}
                    patternUnits="userSpaceOnUse"
                    x={x}
                    y={y}
                >
                    <path d={`M.5 ${height}V.5H${width}`} fill="none" />
                </pattern>
            </defs>
            <rect
                width="100%"
                height="100%"
                strokeWidth={0}
                fill={`url(#${patternId})`}
            />
            {squares && (
                <svg x={x} y={y} className="overflow-visible">
                    {squares.map(([x, y]: number[]) => (
                        <rect
                            strokeWidth="0"
                            key={`${x}-${y}`}
                            width={width + 1}
                            height={height + 1}
                            x={x * width}
                            y={y * height}
                        />
                    ))}
                </svg>
            )}
        </svg>
    );
}
